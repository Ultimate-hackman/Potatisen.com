{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function Bruh(date, type) {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let text = countDown(date, type);\n      setText(text);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return text;\n}\n\nfunction countDown(date, type) {\n  let past = new Date(date).getTime();\n  let now = new Date().getTime();\n  let output = [];\n  let difference;\n\n  if (type === true) {\n    difference = now - past;\n  } else {\n    difference = past - now;\n  }\n\n  let totalHour = Math.floor(difference / (1000 * 60 * 60));\n  let totalMinutes = Math.floor(difference / 1000 / 60);\n  let totaldays = Math.floor(difference / (1000 * 60 * 60 * 24));\n  let totalMonths = Math.floor(difference / (1000 * 60 * 60 * 24 * 31));\n  let days = Math.floor(difference / (1000 * 60 * 60 * 24) - totalMonths);\n  let hours = Math.floor(difference / 1000 / 60 / 60 - totaldays * 24);\n  let minutes = Math.floor(difference / 1000 / 60 - totalHour * 60);\n  let seconds = Math.floor(difference / 1000 - totalMinutes * 60);\n  output.push(days);\n  output.push(hours);\n  output.push(minutes);\n  output.push(seconds);\n  return output;\n}","map":null,"metadata":{},"sourceType":"module"}