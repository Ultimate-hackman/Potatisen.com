{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport default function Bruh(date, type) {\n  _s();\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setText(countDown(date, type));\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return text;\n}\n\n_s(Bruh, \"mMfSPvg3kjJBAgiHJD0l85bq0UA=\");\n\n_c = Bruh;\n\nfunction countDown(date, type) {\n  var past = new Date(date).getTime();\n  var now = new Date().getTime();\n  var output = [];\n  var difference;\n\n  if (type === true) {\n    difference = now - past;\n  } else {\n    difference = past - now;\n  }\n\n  var totalHour = Math.floor(difference / (1000 * 60 * 60));\n  var totalMinutes = Math.floor(difference / 1000 / 60);\n  var totaldays = Math.floor(difference / (1000 * 60 * 60 * 24));\n  var totalMonths = Math.floor(difference / (1000 * 60 * 60 * 24 * 31));\n  var days = Math.floor(difference / (1000 * 60 * 60 * 24) - totalMonths);\n  var hours = Math.floor(difference / 1000 / 60 / 60 - totaldays * 24);\n  var minutes = Math.floor(difference / 1000 / 60 - totalHour * 60);\n  var seconds = Math.floor(difference / 1000 - totalMinutes * 60);\n  output.push(days);\n  output.push(hours);\n  output.push(minutes);\n  output.push(seconds);\n  return output;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Bruh\");","map":{"version":3,"sources":["C:/Users/david/Desktop/potatisen/src/lib/time/countDown.ts"],"names":["useState","useEffect","Bruh","date","type","text","setText","interval","setInterval","countDown","clearInterval","past","Date","getTime","now","output","difference","totalHour","Math","floor","totalMinutes","totaldays","totalMonths","days","hours","minutes","seconds","push"],"mappings":";;AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAGA,eAAe,SAASC,IAAT,CAAcC,IAAd,EAAyBC,IAAzB,EAAuC;AAAA;;AAAA,kBAC5BJ,QAAQ,CAAC,EAAD,CADoB;AAAA,MAC7CK,IAD6C;AAAA,MACvCC,OADuC;;AAGpDL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAEjCF,MAAAA,OAAO,CAACG,SAAS,CAACN,IAAD,EAAOC,IAAP,CAAV,CAAP;AAED,KAJ2B,EAIzB,IAJyB,CAA5B;AAKA,WAAO;AAAA,aAAMM,aAAa,CAACH,QAAD,CAAnB;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SACEF,IADF;AAGD;;GAfuBH,I;;KAAAA,I;;AAkBxB,SAASO,SAAT,CAAmBN,IAAnB,EAAyBC,IAAzB,EAA+B;AAE3B,MAAIO,IAAI,GAAG,IAAIC,IAAJ,CAAST,IAAT,EAAeU,OAAf,EAAX;AACA,MAAIC,GAAG,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAV;AAEA,MAAIE,MAAM,GAAG,EAAb;AAEA,MAAIC,UAAJ;;AAEA,MAAIZ,IAAI,KAAK,IAAb,EAAmB;AACjBY,IAAAA,UAAU,GAAGF,GAAG,GAAGH,IAAnB;AACD,GAFD,MAEO;AACLK,IAAAA,UAAU,GAAGL,IAAI,GAAGG,GAApB;AACD;;AAED,MAAIG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAArB,CAAhB;AACA,MAAII,YAAY,GAAGF,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAd,GAAsB,EAAjC,CAAnB;AACA,MAAIK,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CAAhB;AACA,MAAIM,WAAW,GAAGJ,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EAA1B,CAArB,CAAlB;AAGA,MAAIO,IAAI,GAAGL,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAV,GAAqCM,WAAhD,CAAX;AACA,MAAIE,KAAK,GAAGN,IAAI,CAACC,KAAL,CAAcH,UAAU,GAAG,IAAd,GAAsB,EAAvB,GAA6B,EAA9B,GAAoCK,SAAS,GAAG,EAA3D,CAAZ;AACA,MAAII,OAAO,GAAGP,IAAI,CAACC,KAAL,CAAaH,UAAU,GAAG,IAAd,GAAsB,EAAvB,GAA6BC,SAAS,GAAG,EAApD,CAAd;AACA,MAAIS,OAAO,GAAGR,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAd,GAAsBI,YAAY,GAAG,EAAhD,CAAd;AAEAL,EAAAA,MAAM,CAACY,IAAP,CAAYJ,IAAZ;AACAR,EAAAA,MAAM,CAACY,IAAP,CAAYH,KAAZ;AACAT,EAAAA,MAAM,CAACY,IAAP,CAAYF,OAAZ;AACAV,EAAAA,MAAM,CAACY,IAAP,CAAYD,OAAZ;AAGF,SAAOX,MAAP;AAED","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport pluralCheck from './pluralCheck'\r\n\r\nexport default function Bruh(date: any, type: string) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n\r\n      setText(countDown(date, type));\r\n\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    text\r\n  );\r\n}\r\n\r\n\r\nfunction countDown(date, type) {\r\n  \r\n    let past = new Date(date).getTime(); \r\n    let now = new Date().getTime();\r\n\r\n    let output = []\r\n  \r\n    let difference;\r\n\r\n    if (type === true) {\r\n      difference = now - past\r\n    } else {\r\n      difference = past - now\r\n    }\r\n  \r\n    let totalHour = Math.floor(difference / (1000 * 60 * 60));\r\n    let totalMinutes = Math.floor((difference / 1000) / 60);\r\n    let totaldays = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n    let totalMonths = Math.floor(difference / (1000 * 60 * 60 * 24 * 31));\r\n    \r\n    \r\n    let days = Math.floor(difference / (1000 * 60 * 60 * 24) - totalMonths);\r\n    let hours = Math.floor((((difference / 1000) / 60) / 60) - totaldays * 24);\r\n    let minutes = Math.floor(((difference / 1000) / 60) - totalHour * 60);\r\n    let seconds = Math.floor((difference / 1000) - totalMinutes * 60);\r\n\r\n    output.push(days)\r\n    output.push(hours)\r\n    output.push(minutes)\r\n    output.push(seconds)\r\n\r\n\r\n  return output \r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}