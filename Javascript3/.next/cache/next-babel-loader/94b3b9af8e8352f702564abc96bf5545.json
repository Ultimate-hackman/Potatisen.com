{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function Bruh(date, type) {\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      var text = countDown(date, type);\n      setText(text);\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return text;\n}\n\nfunction countDown(date, type) {\n  var past = new Date(date).getTime();\n  var now = new Date().getTime();\n  var output = [];\n  var difference;\n\n  if (type === true) {\n    difference = now - past;\n  } else {\n    difference = past - now;\n  }\n\n  var totalHour = Math.floor(difference / (1000 * 60 * 60));\n  var totalMinutes = Math.floor(difference / 1000 / 60);\n  var totaldays = Math.floor(difference / (1000 * 60 * 60 * 24));\n  var totalMonths = Math.floor(difference / (1000 * 60 * 60 * 24 * 31));\n  var days = Math.floor(difference / (1000 * 60 * 60 * 24) - totalMonths);\n  var hours = Math.floor(difference / 1000 / 60 / 60 - totaldays * 24);\n  var minutes = Math.floor(difference / 1000 / 60 - totalHour * 60);\n  var seconds = Math.floor(difference / 1000 - totalMinutes * 60);\n  output.push(days);\n  output.push(hours);\n  output.push(minutes);\n  output.push(seconds);\n  return output;\n}","map":null,"metadata":{},"sourceType":"module"}